.PHONY: all check clean doc

OCAMLPACKS[] =
	oUnit
	extlib
	num

OCAMLFLAGS    +=
OCAMLCFLAGS   +=
OCAMLOPTFLAGS +=
OCAML_LINK_FLAGS +=
OCAML_BYTE_LINK_FLAGS +=
OCAML_NATIVE_LINK_FLAGS +=

FILES[] =
	base
	hList
	socket
	server
	logger
	dispatch
	bigIntUtil
	parsec
	handshake
	frame
	httpResponse
	httpRequest
	glob
	maybe
	getHandler
	wsHandler
	dsl

UseCamlp4($(EMPTY))

TEST_FILES[] =
	loggerTest
	bigIntUtilTest
	handshakeTest
	frameTest
	httpResponseTest
	httpRequestTest
	globTest

PROGRAM=webSocket
TEST_PROGRAM = runner
OCAML_LIBS +=
OCAML_CLIBS +=
OCAML_OTHER_LIBS +=
OCAML_LIB_FLAGS +=

OCAMLLINK = $(OCAMLC)
OCAMLOPTLINK = $(OCAMLOPT)
OCAMLC   += -for-pack $(capitalize $(PROGRAM))
OCAMLOPT += -for-pack $(capitalize $(PROGRAM))

.DEFAULT : all

.SCANNER: scan-ocaml-webSocket.mli : webSocket.mli $(CAMLP4CMO)
	ocamldep -modules $< | ocamldep-postproc

webSocket.cmi : webSocket.mli :scanner: scan-ocaml-webSocket.mli
	ocamlc -c $<

all: $(OCamlPackage $(PROGRAM), $(FILES))

check : $(OCamlProgram $(TEST_PROGRAM), $(TEST_FILES) $(FILES))
	./$(TEST_PROGRAM)


doc : doc/index.html

doc/index.html: webSocket.mli
	rm -rf doc
	mkdir -p doc
	ocamldoc -colorize-code -t "OCaml/WebSocket" -d doc -html webSocket.mli
	./update doc


clean:
	rm -f $(PROGRAM) $(TEST_PROGRAM) *.cm[iox] *.opt *.run *~ *.out *.o *.annot